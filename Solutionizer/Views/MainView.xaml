<Window 
    x:Class="Solutionizer.Views.MainView" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4" 
    xmlns:Commands="clr-namespace:Solutionizer.Commands" 
    xmlns:Controls="clr-namespace:Solutionizer.Controls" 
    xmlns:Converters="clr-namespace:Solutionizer.Converters" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:extToolkit="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended" 
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    xmlns:Infrastructure="clr-namespace:Solutionizer.Infrastructure" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:Models="clr-namespace:Solutionizer.Models" 
    xmlns:Views="clr-namespace:Solutionizer.Views" 
    TextOptions.TextFormattingMode="Display" 
    TextOptions.TextHintingMode="Fixed" 
    Height="350" Width="525" 
    SnapsToDevicePixels="true" 
    Title="Solutionizer" 
    UseLayoutRounding="True" 
    Infrastructure:ModelAttacher.AttachModel="{x:Type Models:MainViewModel}" 
    mc:Ignorable="d" d:DataContext="{d:DesignInstance Models:MainViewModel}" 
    d:DesignHeight="300" d:DesignWidth="300">
    <Window.Resources>
        <Converters:BusyToProgressStateConverter x:Key="BusyToProgressStateConverter" />
        <Commands:CommandExecutor x:Key="commandExecutor" />
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="{Binding IsBusy, Source={StaticResource commandExecutor}, Converter={StaticResource BusyToProgressStateConverter}}" />
    </Window.TaskbarItemInfo>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <cmd:EventToCommand Command="{Binding OnLoadedCommand, Mode=OneWay}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding OnClosingCommand, Mode=OneWay}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.Resources>

        </Grid.Resources>
        <extToolkit:BusyIndicator BusyContent="{Binding BusyMessage, Source={StaticResource commandExecutor}}" IsBusy="{Binding IsBusy, Source={StaticResource commandExecutor}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <Grid Margin="3 3 0 3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox IsReadOnly="true" Text="{Binding Settings.RootPath}" />
                    <Button Grid.Column="1" Margin="3 0 0 0" Command="{Binding SelectRootPathCommand}">
                        <Image Height="16" Width="16" Source="{Converters:Shell32Icon FileName='shell32.dll',IconIndex=3}" />
                    </Button>
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Controls:FileSystemTreeView 
                        ScanOnStartup="{Binding Settings.ScanOnStartup}"
                        HideRootNode="{Binding Settings.HideRootNode}" 
                        IsFlatMode="{Binding Settings.IsFlatMode}" 
                        RootPath="{Binding Settings.RootPath}" />
                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <ToggleButton Command="{Binding ToggleFlatModeCommand}" IsChecked="{Binding Settings.IsFlatMode, Mode=OneWay}" ToolTip="Toggle between flat and hierarchical display">F</ToggleButton>
                        <ToggleButton Command="{Binding ToggleHideRootNodeCommand}" IsChecked="{Binding Settings.HideRootNode, Mode=OneWay}" ToolTip="Hide the root node">H</ToggleButton>
                    </StackPanel>
                </Grid>

                <GridSplitter Grid.Column="1" Grid.RowSpan="2" Width="6" Background="Transparent" HorizontalAlignment="Center" ShowsPreview="true" VerticalAlignment="Stretch" />

                <WrapPanel Grid.Column="2" Margin="0 3 3 3" HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button Margin="3 0 0 0" Command="{Binding LaunchCommand}" Content="Launch" />
                    <Button Margin="3 0 0 0" Command="{Binding SaveCommand}" Content="Save" />
                </WrapPanel>

                <Views:SolutionView Grid.Column="2" Grid.Row="1" Margin="0 3 3 3" DataContext="{Binding Solution}" />

            </Grid>
        </extToolkit:BusyIndicator>
    </Grid>
</Window>